<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.Windows.WinmdGenerator/0.56.13-preview">
    <PropertyGroup Label="Globals">
        <OutputWinmd>../.windows/winmd/Microsoft.ServiceFabric.winmd</OutputWinmd>
        <WinmdVersion>255.255.255.255</WinmdVersion>
        <ExcludeFromCrossarch>true</ExcludeFromCrossarch>
        <ScanArch>x64</ScanArch>
        <SFIdlDir>../idl</SFIdlDir>
        <AdditionalIncludes>$(SFIdlDir)</AdditionalIncludes>
        <!--compiled h headers from idl-->
        <SdkIncRoot>obj\CompiledHeaders</SdkIncRoot>
    </PropertyGroup>
    <ItemGroup>
        <!-- Used to change agile attribute. 
            In SF internal implementation, COM are most likely designed for multi-threading.
            Agile attribute tells windows Rust tool chain to mark COM as Send, therefore avoids unnecessary manual wrappings.
            If Com is in fact not agile for special cases, user of the SF Rust needs to handle it with care. -->
        <EmitterRsp Include="emitter.settings.rsp"/>
    </ItemGroup>
    <!-- Note: Native typedef is defined in autoTypes.json. The metadata generator eliminates native types during scanning. 
    But native types/typedef make generated code better. -->
    <ItemGroup>
        <Idls Include="$(SFIdlDir)\FabricClient.idl;$(SFIdlDir)\FabricCommon.idl;$(SFIdlDir)\FabricRuntime.idl;$(SFIdlDir)\FabricTypes.idl;$(SFInternalIdlDir)\fabrictransport_.idl" />
        <ImportLibs Include="../importlibs/*.lib" />
        <PartitionFiles Include="partitions\**\main.cpp"/>
        <Partition Include="@(PartitionFiles)">
            <Name>$([System.IO.Path]::GetFileName($([System.IO.Path]::GetDirectoryName($([System.String]::Copy('%(Directory)'))))))</Name>
        </Partition>
    </ItemGroup>

    <Target Name="CopyWin32Metadata" AfterTargets="Build">
        <Copy
            SourceFiles="$(PkgMicrosoft_Windows_SDK_Win32Metadata)\Windows.Win32.winmd"
            DestinationFiles="..\.windows\winmd\Windows.Win32.winmd" />
    </Target>
</Project>